{"ast":null,"code":"import axios from 'axios';\nconst LOGIN_USER_KEY = 'LOGIN_USER_KEY';\nvar baseURL;\n\nif (process.env.REACT_APP_ENVIRONMENT && process.env.REACT_APP_ENVIRONMENT === 'PRODUCTION') {\n  baseURL = process.env.REACT_APP_API_BASE_URL;\n} else baseURL = 'http://127.0.0.1:8000'; // baseURL = \"http://127.0.0.1:8000/\";\n\n\nconst api = axios.create({\n  baseURL: baseURL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\napi.interceptors.request.use(config => {\n  if (localStorage.getItem(LOGIN_USER_KEY)) {\n    config.headers.common['Authorization'] = JSON.parse(localStorage.getItem(LOGIN_USER_KEY)).token;\n  }\n\n  return config;\n}, err => {\n  console.error(err);\n});\nexport default class API {\n  constructor() {\n    this.signUp = async (username, email, password) => {\n      const savedPost = await api.post('/users/signup/', {\n        username: username,\n        email: email,\n        password: password\n      }).then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return savedPost;\n    };\n\n    this.signIn = async (email, password) => {\n      const savedPost = await api.post('/users/signin/', {\n        email: email,\n        password: password\n      }).then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return savedPost;\n    };\n\n    this.getUsers = async () => {\n      const posts = await api.get('/users/').then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return posts;\n    };\n\n    this.getItems = async () => {\n      let url = '/items/';\n      const items = await api.get(url).then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return items;\n    };\n\n    this.getCarts = async () => {\n      const carts = await api.get('/carts/', {\n        requireToken: true\n      }).then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return carts;\n    };\n\n    this.addCarts = async item_id => {\n      const savedCart = await api.post('/carts/add/', {\n        item: item_id,\n        quantity: 1\n      }).then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return savedCart;\n    };\n\n    this.updateCarts = async (cart_id, quantity) => {\n      const savedCart = await api.put('/carts/update/' + cart_id + '/', {\n        quantity: quantity\n      }).then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return savedCart;\n    };\n\n    this.deleteCarts = async cart_id => {\n      const response = await api.delete('/carts/delete/' + cart_id + '/').then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return response;\n    };\n\n    this.orderAdd = async function () {\n      let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      const order = await api.post('/orders/add/', params).then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return order;\n    };\n\n    this.getPosts = async () => {\n      const posts = await api.get('/item/').then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return posts;\n    };\n\n    this.addPost = async (name, body, image) => {\n      const formData = new FormData();\n      formData.append('name', name);\n      formData.append('body', body);\n      formData.append('image', image);\n      const savedPost = await api.post('/item/add/', formData).then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return savedPost;\n    };\n\n    this.deletePost = async id => {\n      const response = await api.delete('/item/delete/' + id + '/').then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return response;\n    };\n  }\n\n}","map":{"version":3,"names":["axios","LOGIN_USER_KEY","baseURL","process","env","REACT_APP_ENVIRONMENT","REACT_APP_API_BASE_URL","api","create","headers","interceptors","request","use","config","localStorage","getItem","common","JSON","parse","token","err","console","error","API","signUp","username","email","password","savedPost","post","then","response","data","catch","Error","signIn","getUsers","posts","get","getItems","url","items","getCarts","carts","requireToken","addCarts","item_id","savedCart","item","quantity","updateCarts","cart_id","put","deleteCarts","delete","orderAdd","params","order","getPosts","addPost","name","body","image","formData","FormData","append","deletePost","id"],"sources":["/Users/apple/Desktop/Refresh-drinks/frontend/src/API.js"],"sourcesContent":["import axios from 'axios';\nconst LOGIN_USER_KEY = 'LOGIN_USER_KEY';\n\nvar baseURL;\nif (process.env.REACT_APP_ENVIRONMENT && process.env.REACT_APP_ENVIRONMENT === 'PRODUCTION') {\n    baseURL = process.env.REACT_APP_API_BASE_URL;\n } else baseURL = 'http://127.0.0.1:8000';\n// baseURL = \"http://127.0.0.1:8000/\";\n\n\nconst api = axios.create({\n    baseURL: baseURL,\n    headers: {\n        'Content-Type': 'application/json'\n    }\n});\n\napi.interceptors.request.use(\n    config => {\n        if (localStorage.getItem(LOGIN_USER_KEY)) {\n            config.headers.common['Authorization'] = JSON.parse(localStorage.getItem(LOGIN_USER_KEY)).token;\n        }\n\n        return config;\n    },\n    err => {\n        console.error(err);\n    }\n);\n\nexport default class API {\n    //////////////////////////////\n    // USERS\n    /////////////////////////////\n\n    signUp = async (username, email, password) => {\n        const savedPost = await api\n            .post('/users/signup/', {\n                username: username,\n                email: email,\n                password: password\n            })\n            .then(response => {\n                return response.data;\n            })\n            .catch(error => {\n                throw new Error(error);\n            });\n        return savedPost;\n    };\n\n    signIn = async (email, password) => {\n        const savedPost = await api\n            .post('/users/signin/', {\n                email: email,\n                password: password\n            })\n            .then(response => {\n                return response.data;\n            })\n            .catch(error => {\n                throw new Error(error);\n            });\n        return savedPost;\n    };\n\n    getUsers = async () => {\n        const posts = await api\n            .get('/users/')\n            .then(response => {\n                return response.data;\n            })\n            .catch(error => {\n                throw new Error(error);\n            });\n        return posts;\n    };\n\n    // ///////////////////////////////////////\n    // Items\n    // ///////////////////////////////////////\n\n    getItems = async () => {\n        let url = '/items/';\n        const items = await api\n            .get(url)\n            .then(response => {\n                return response.data;\n            })\n            .catch(error => {\n                throw new Error(error);\n            });\n        return items;\n    };\n\n    // ///////////////////////////////////////\n    // Carts\n    // //////////////////////////////////////\n\n    getCarts = async () => {\n        const carts = await api\n            .get('/carts/', {requireToken:true})\n            .then(response => {\n                return response.data;\n            })\n            .catch(error => {\n                throw new Error(error);\n            });\n        return carts;\n\n    };\n\n    addCarts = async item_id => {\n        const savedCart = await api\n            .post('/carts/add/', {\n                item: item_id,\n                quantity: 1\n            })\n            .then(response => {\n                return response.data;\n            })\n            .catch(error => {\n                throw new Error(error);\n            });\n        return savedCart;\n    };\n\n    updateCarts = async (cart_id, quantity) => {\n        const savedCart = await api\n            .put('/carts/update/' + cart_id + '/', {\n                quantity: quantity\n            })\n            .then(response => {\n                return response.data;\n            })\n            .catch(error => {\n                throw new Error(error);\n            });\n        return savedCart;\n    };\n\n    deleteCarts = async cart_id => {\n        const response = await api\n            .delete('/carts/delete/' + cart_id + '/')\n            .then(response => {\n                return response.data;\n            })\n            .catch(error => {\n                throw new Error(error);\n            });\n        return response;\n    };\n\n    ////////////////////////////////////////////\n    // Order/Checkout\n    // ////////////////////////////////////////\n\n    orderAdd = async (params = {}) => {\n        const order = await api\n            .post('/orders/add/', params)\n            .then(response => {\n                return response.data;\n            })\n            .catch(error => {\n                throw new Error(error);\n            });\n        return order;\n    };\n\n    ///////////////////////////////////////////\n    // Reference Post\n    //////////////////////////////////////////\n\n    getPosts = async () => {\n        const posts = await api\n            .get('/item/')\n            .then(response => {\n                return response.data;\n            })\n            .catch(error => {\n                throw new Error(error);\n            });\n        return posts;\n    };\n\n    addPost = async (name, body, image) => {\n        const formData = new FormData();\n        formData.append('name', name);\n        formData.append('body', body);\n        formData.append('image', image);\n        const savedPost = await api\n            .post('/item/add/', formData)\n            .then(response => {\n                return response.data;\n            })\n            .catch(error => {\n                throw new Error(error);\n            });\n        return savedPost;\n    };\n\n    deletePost = async id => {\n        const response = await api\n            .delete('/item/delete/' + id + '/')\n            .then(response => {\n                return response.data;\n            })\n            .catch(error => {\n                throw new Error(error);\n            });\n        return response;\n    };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}